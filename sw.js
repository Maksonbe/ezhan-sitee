// Service Worker –¥–ª—è –ï–ñ–ê–ù –°–ò–°–¢–ï–ú–°
const CACHE_NAME = 'ezhan-system-v1.0';
const urlsToCache = [
    '/',
    '/index.html',
    '/about.html',
    '/manifest.html', 
    '/gallery.html',
    '/game.html',
    '/css/style-new.css',
    '/js/main.js',
    '/js/ezhan-simulator.js',
    '/js/pwa.js',
    '/js/settings.js',
    '/manifest.json',
    '/icons/icon-192.png',
    '/icons/icon-512.png'
];

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker
self.addEventListener('install', function(event) {
    console.log('üîÑ Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è –ï–ñ–ê–ù –°–ò–°–¢–ï–ú–°');
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(function(cache) {
                console.log('üíæ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ï–∂–∞–Ω–∞');
                return cache.addAll(urlsToCache);
            })
    );
});

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è - –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–µ—à–µ–π
self.addEventListener('activate', function(event) {
    console.log('üöÄ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è');
    event.waitUntil(
        caches.keys().then(function(cacheNames) {
            return Promise.all(
                cacheNames.map(function(cacheName) {
                    if (cacheName !== CACHE_NAME) {
                        console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–µ—à–∞:', cacheName);
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
self.addEventListener('fetch', function(event) {
    event.respondWith(
        caches.match(event.request)
            .then(function(response) {
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à –∏–ª–∏ –¥–µ–ª–∞–µ–º –æ–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
                return response || fetch(event.request);
            })
    );
});